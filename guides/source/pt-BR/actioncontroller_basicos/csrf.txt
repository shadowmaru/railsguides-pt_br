== Proteção contra Falsificação de Requisições ==

Falsificação de requisições entre sites (Cross-site request forgery) é um tipo de ataque onde um site engana um usuário fazendo-ô realizar requisições para outro site, possivelmente adicionando, modificando ou apagando dados no site sem o conhecimento e permissão do usuário. O primeiro passo para evitar isto é certificar-se de que todas as actions "destrutivas" (create, update e destroy) só possam ser acessadas com requisições de um tipo diferente de GET. Se você está seguindo as convenções RESTful você já estará fazendo isso. No entanto, um site malicioso ainda assim pode fazer solicitações de um tipo diferente de GET para o seu site facilmente, e é aí que a proteção contra a fasificação de requisições entra. Como diz o nome, ele protege contra falsificação de requisições.  Isto é feito adicionando um valor que não possa ser adivinhado e que só será conhecido pelo seu servidor a cada requisição. Desta forma, se uma requisição chegar sem o valor apropriado, ela terá seu acesso negado.

Se você gerar um formulário desta forma:

[source, ruby]
-----------------------------------------
<% form_for @user do |f| -%>
  <%= f.text_field :username %>
  <%= f.text_field :password -%>
<% end -%>
-----------------------------------------

Você perceberá que o valor é adicionado como um campo do tipo hidden:

[source, html]
-----------------------------------------
<form action="/users/1" method="post">
<div><!-- ... --><input type="hidden" value="67250ab105eb5ad10851c00a5621854a23af5489" name="authenticity_token"/></div>
<!-- Fields -->
</form>
-----------------------------------------

O Rails adiciona este valor para cada formulário que é gerado com os link:../form_helpers.html[helpers de formulário], então na maior parte dos casos você não precisará se preocupar com isso. Se você escrever um formulário manualmente ou precisar adicionar o valor por qualquer outra razão, ele está disponível através do método `form_authenticity_token`:

.Adicionando uma variável JavaScript contendo o valor para ser utilizado com Ajax
-----------------------------------------
<%= javascript_tag "MyApp.authenticity_token = '#{form_authenticity_token}'" %>
-----------------------------------------

O:../security.html[Guia de Segurança] tem mais informações sobre isto e várias outras informações sobre questões de segurança que você deve estar ciente quando estiver desenvolvendo sua aplicação web.
